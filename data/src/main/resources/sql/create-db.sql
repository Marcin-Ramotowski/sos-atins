DROP SCHEMA PUBLIC CASCADE;

CREATE TABLE IF NOT EXISTS User (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
	admin BOOLEAN NOT NULL,
	birth_date DATE NOT NULL,
	email VARCHAR(256) NOT NULL,
	first_name VARCHAR(64) NOT NULL,
	last_name VARCHAR(64) NOT NULL,
	login VARCHAR(32) NOT NULL UNIQUE,
	password BINARY(64) NOT NULL,
	created_on DATETIME NOT NULL,
	last_updated_on DATETIME NOT NULL
);

CREATE TABLE IF NOT EXISTS Department(
	id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
	created_on DATETIME NOT NULL,
	last_updated_on DATETIME NOT NULL,
	head_of_department VARCHAR(100) NOT NULL,
	localization VARCHAR(200) NOT NULL,
	name VARCHAR(200) NOT NULL
);

CREATE TABLE IF NOT EXISTS Teacher (
	user_id INTEGER NOT NULL PRIMARY KEY,
	department_id INTEGER NOT NULL,
    degree VARCHAR(64) NOT NULL,
    employment_type VARCHAR(64) NOT NULL, -- to będzie enum w Javie
    hire_date DATETIME NOT NULL,
    office_number VARCHAR(16) NOT NULL,
    title VARCHAR(64) NOT NULL,

    FOREIGN KEY (user_id) REFERENCES User(id),
    FOREIGN KEY (department_id) REFERENCES Department(id)
);

CREATE TABLE IF NOT EXISTS Student (
	user_id INTEGER NOT NULL PRIMARY KEY,
	department_id INTEGER NOT NULL,
	agreement_num INTEGER NOT NULL,
	avg_score REAL NOT NULL,
	title_of_grade VARCHAR(64) NOT NULL, -- to będzie enum w Javie
	current_semester INTEGER NOT NULL,
	graduation_date DATE NOT NULL,
	enrollment_year DATE NOT NULL,
	enroll_semester INTEGER NOT NULL,
	mode_of_study VARCHAR(64) NOT NULL, -- to będzie enum w Javie
	scholarship_holder BOOLEAN NOT NULL,
	specialization VARCHAR(64) NOT NULL, -- to będzie enum w Javie
	student_number INTEGER NOT NULL UNIQUE,

	FOREIGN KEY (user_id) REFERENCES User(id),
    FOREIGN KEY (department_id) REFERENCES Department(id)
);


CREATE TABLE IF NOT EXISTS Subject (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
	description NVARCHAR(1024),
	name NVARCHAR(128) NOT NULL,
	type NVARCHAR(32) NOT NULL,
	created_on DATETIME NOT NULL,
	last_updated_on DATETIME NOT NULL,
);

CREATE TABLE IF NOT EXISTS TeacherSubject (
	teacher_id INTEGER NOT NULL,
	subject_id INTEGER NOT NULL,

	PRIMARY KEY (teacher_id, subject_id),
	FOREIGN KEY (teacher_id) REFERENCES Teacher(user_id),
	FOREIGN KEY (subject_id) REFERENCES Subject(id),
);

CREATE TABLE IF NOT EXISTS Class (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
	subject_id INTEGER NOT NULL,
	teacher_id INTEGER NOT NULL,
	week_day NVARCHAR(16) NOT NULL,
	start_time TIME NOT NULL,
	end_time TIME NOT NULL,
	room VARCHAR(16),
	type NVARCHAR(16) NOT NULL,
	created_on DATETIME NOT NULL,
	last_updated_on DATETIME NOT NULL,

	FOREIGN KEY (subject_id) REFERENCES Subject(id),
	FOREIGN KEY (teacher_id) REFERENCES Teacher(user_id),
);


CREATE TABLE IF NOT EXISTS Enrollment (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
	subject_id INTEGER NOT NULL,
	student_id INTEGER NOT NULL,
	enrollment_date DATE NOT NULL,
	status NVARCHAR(64),
	created_on DATETIME NOT NULL,
	last_updated_on DATETIME NOT NULL,

	FOREIGN KEY (subject_id) REFERENCES Subject(id),
	FOREIGN KEY (student_id) REFERENCES Student(user_id),
);

CREATE TABLE IF NOT EXISTS Schedule(
	student_id INTEGER,
	class_id INTEGER,
	FOREIGN KEY (student_id) REFERENCES Student(user_id),
	FOREIGN KEY (class_id) REFERENCES Class(id)
);

CREATE TABLE IF NOT EXISTS Grade(
	id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
	teacher_id INTEGER NOT NULL,
	created_on DATETIME NOT NULL,
	last_updated_on DATETIME NOT NULL,
	comment VARCHAR(500),
	grade DECIMAL(2,1),

	FOREIGN KEY (teacher_id) REFERENCES Teacher(user_id)
);

CREATE TABLE IF NOT EXISTS Transcript(
	student_id INTEGER PRIMARY KEY,
	FOREIGN KEY (student_id) REFERENCES Student(user_id)
);

CREATE TABLE IF NOT EXISTS Country (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
	code VARCHAR(10) NOT NULL,
	name VARCHAR(128) NOT NULL,
	created_on DATETIME NOT NULL,
	last_updated_on DATETIME NOT NULL
);

CREATE TABLE IF NOT EXISTS City (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    country_id INTEGER NOT NULL,
	code VARCHAR(10) NOT NULL,
	name VARCHAR(128) NOT NULL,
	created_on DATETIME NOT NULL,
	last_updated_on DATETIME NOT NULL,

	FOREIGN KEY (country_id) REFERENCES Country(id),
);

CREATE TABLE IF NOT EXISTS Address (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
	user_id INTEGER NOT NULL,
	city_id INTEGER NOT NULL,
	is_default BOOLEAN,
	flat VARCHAR(10),
    house VARCHAR(10) NOT NULL,
    postal_code VARCHAR(12) NOT NULL,
    street VARCHAR(100),
	created_on DATETIME NOT NULL,
	last_updated_on DATETIME NOT NULL,

	FOREIGN KEY (user_id) REFERENCES User(id),
	FOREIGN KEY (city_id) REFERENCES City(id),
);
